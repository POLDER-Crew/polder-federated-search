apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "polder-federated-search.fullname" . }}
  labels:
    {{- include "polder-federated-search.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "polder-federated-search.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "polder-federated-search.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "polder-federated-search.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # All of the '/polder' stuff below is to run in a subdirectory
        # named '/polder'. You can delete the SCRIPT_NAME and SERVER_NAME
        # environment variables if you don't want to do that.
        # - name: SCRIPT_NAME
        #   value: /polder
        # - name: SERVER_NAME
        #   value: None
        - name: GLEANER_ENDPOINT_URL
          value: {{ include "gleaner.triplestore.endpoint" . }}namespace/polder/sparql/
        - name: FLASK_APP
          value: {{ .Values.flaskApp }}
        - name: FLASK_RUN_HOST
          value: {{ .Values.flaskRunHost }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key:  flaskSecretKey
              name: {{ .Release.Name }}-secrets
        - name: FLASK_ENV
          value: production
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: sentryDsn
              name: {{ .Release.Name }}-secrets
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
